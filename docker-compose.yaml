version: "3.10"

services:
  # PostgreSQL - Base de données pour Keycloak
  postgresql:
    image: postgres:17.4
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_pass
      POSTGRES_DB: keycloak_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - nifi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak_db"]
      interval: 5s
      timeout: 5s
      retries: 5
  # pgadmin    
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgresql
    networks:
      - nifi_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  # Keycloak - Gestion des utilisateurs et authentification
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresql:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_pass
    ports:
      - "8080:8080"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - nifi_network
    command: ["start-dev"]

  # Apache NiFi - Ingestion et traitement des données
  nifi:
    image: apache/nifi:2.3.0
    container_name: nifi3
    environment:
      - NIFI_WEB_HTTPS_HOST=0.0.0.0
      - NIFI_WEB_HTTPS_PORT=8443
      - NIFI_SECURITY_USER_AUTHENTICATION=OIDC
      - NIFI_LOG_DIR=/opt/nifi/nifi-current/logs
      - NIFI_ELECTION_MAX_WAIT=5m
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=admin123456789
      - NIFI_WEB_PROXY_CONTEXT_PATH=/nifi
      - NIFI_WEB_PROXY_HOST=localhost:8443
    ports:
      - "8443:8443"
    volumes:
      - nifi_data:/opt/nifi/nifi-current/data
      - nifi_conf:/opt/nifi/nifi-current/conf
      - C:/Users/Salma Fannich/Downloads/postgresql-42.7.5.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.5.jar
      - C:/Users/Salma Fannich/Downloads/dataset_project:/dataset_project_test:z
    depends_on:
      - keycloak
      - postgresql
    networks:
      - nifi_network
    command: ["start-dev"]

  # Prometheus - Monitoring des services
  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
    networks:
      - nifi_network

  # Grafana - Monitoring et visualisation des métriques
  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - nifi_network
    volumes:
      - grafana_data:/var/lib/grafana

  # Loki - Gestion des logs
  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/var/lib/loki
    networks:
      - nifi_network
  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/log:/var/log  
    ports:
      - "9080:9080"
    networks:
      - nifi_network
    depends_on:
      - loki
    restart: unless-stopped

  
networks:
  nifi_network:
    driver: bridge

volumes:
  postgres_data:
  nifi_data:
  nifi_conf:
  grafana_data:
  loki_data:
  pgadmin_data:
  prom_data:  # Définir le volume prom_data